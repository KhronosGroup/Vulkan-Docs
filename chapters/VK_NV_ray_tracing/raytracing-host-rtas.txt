[[host-acceleration-structure]]
== Host Acceleration Structure Operations

Implementations are also required to provide host implementations of the
acceleration structure operations if the
<<feature-raytracing-hostascmds,pname:rayTracingHostAccelerationStructureCommands>>
feature is enabled:

  * flink:vkBuildAccelerationStructureKHR corresponding to
    flink:vkCmdBuildAccelerationStructureKHR
  * flink:vkCopyAccelerationStructureKHR corresponding to
    flink:vkCmdCopyAccelerationStructureKHR
  * flink:vkCopyAccelerationStructureToMemoryKHR corresponding to
    flink:vkCmdCopyAccelerationStructureToMemoryKHR
  * flink:vkCopyMemoryToAccelerationStructureKHR corresponding to
    flink:vkCmdCopyMemoryToAccelerationStructureKHR
  * flink:vkWriteAccelerationStructuresPropertiesKHR corresponding to
    flink:vkCmdWriteAccelerationStructuresPropertiesKHR

These commands are functionally equivalent to their device counterparts,
except that they are executed on the host timeline, rather than being
enqueued into command buffers.

All acceleration structures used by the host commands must: be bound to
host-visible memory, and all input data for acceleration structure builds
must: be referenced using host addresses instead of device addresses.
Applications are not required to map acceleration structure memory when
using the host commands.


[NOTE]
.Note
====
The flink:vkBuildAccelerationStructureKHR and
flink:vkCmdBuildAccelerationStructureKHR may: use different algorithms, and
thus are not required to produce identical structures.
The structures produced by these two commands may: exhibit different memory
footprints or traversal performance, but should strive to be similar where
possible.

Apart from these details, the host and device operations are interchangable.
For example, an application can: use flink:vkBuildAccelerationStructureKHR
to build a structure, compact it on the device using
flink:vkCmdCopyAccelerationStructureKHR, and serialize the result using
flink:vkCopyAccelerationStructureToMemoryKHR.
====

[open,refpage='vkBuildAccelerationStructureKHR',desc='Build an acceleration structure on the host',type='protos']
--
:refpage: vkBuildAccelerationStructureKHR

To build acceleration structures on the host, call:

include::{generated}/api/protos/vkBuildAccelerationStructureKHR.txt[]

This command fulfills the same task as
flink:vkCmdBuildAccelerationStructureKHR but executed by the host.

  * pname:device is the sname:VkDevice for which the acceleration structures
    are being built.
  * pname:infoCount is the number of acceleration structures to build.
    It specifies the number of the pname:pInfos structures and
    pname:ppOffsetInfos pointers that must: be provided.
  * pname:pInfos is a pointer to an array of pname:infoCount
    slink:VkAccelerationStructureBuildGeometryInfoKHR structures defining
    the geometry used to build each acceleration structure.
  * pname:ppOffsetInfos is an array of pname:infoCount pointers to arrays of
    slink:VkAccelerationStructureBuildOffsetInfoKHR structures.
    Each pname:ppOffsetInfos[i] is an array of
    pname:pInfos[i].pname:geometryCount
    slink:VkAccelerationStructureBuildOffsetInfoKHR structures defining
    dynamic offsets to the addresses where geometry data is stored, as
    defined by pname:pInfos[i].

The fname:vkBuildAccelerationStructureKHR command provides the ability to
initiate multiple acceleration structures builds, however there is no
ordering or synchronization implied between any of the individual
acceleration structure builds.

[NOTE]
.Note
====
This means that an application cannot: build a top-level acceleration
structure in the same flink:vkBuildAccelerationStructureKHR call as the
associated bottom-level or instance acceleration structures are being built.
There also cannot: be any memory aliasing between any acceleration structure
memories or scratch memories being used by any of the builds.
====

ifdef::VK_KHR_deferred_host_operations[]
If the slink:VkDeferredOperationInfoKHR structure is included in the
pname:pNext chain of any slink:VkAccelerationStructureBuildGeometryInfoKHR
structure, the operation of this command is _deferred_, as defined in the
<<deferred-host-operations,Deferred Host Operations>> chapter.
endif::VK_KHR_deferred_host_operations[]

.Valid Usage
****
include::{chapters}/commonvalidity/build_acceleration_structure_common.txt[]
  * [[VUID-vkBuildAccelerationStructureKHR-None-03437]]
    All slink:VkDeviceOrHostAddressKHR or
    slink:VkDeviceOrHostAddressConstKHR referenced by this command must:
    contain valid host addresses
  * [[VUID-vkBuildAccelerationStructureKHR-None-03438]]
    All sname:VkAccelerationStructureKHR objects referenced by this command
    must: be bound to host-visible memory
  * [[VUID-vkBuildAccelerationStructureKHR-rayTracingHostAccelerationStructureCommands-03439]]
    The <<feature-raytracing-hostascmds,
    sname:VkPhysicalDeviceRayTracingFeaturesKHR::pname:rayTracingHostAccelerationStructureCommands>>
    feature must: be enabled
****

include::{generated}/validity/protos/vkBuildAccelerationStructureKHR.txt[]
--

[open,refpage='vkCopyAccelerationStructureKHR',desc='Copy an acceleration structure on the host',type='protos']
--
:refpage: vkCopyAccelerationStructureKHR

To copy or compact an acceleration structure on the host, call:

include::{generated}/api/protos/vkCopyAccelerationStructureKHR.txt[]

This command fulfills the same task as
flink:vkCmdCopyAccelerationStructureKHR but executed by the host.

  * pname:device is the device which owns the acceleration structures.
  * pname:pInfo is a pointer to a slink:VkCopyAccelerationStructureInfoKHR
    structure defining the copy operation.

ifdef::VK_KHR_deferred_host_operations[]
If the slink:VkDeferredOperationInfoKHR structure is included in the
pname:pNext chain of the slink:VkCopyAccelerationStructureInfoKHR structure,
the operation of this command is _deferred_, as defined in the
<<deferred-host-operations,Deferred Host Operations>> chapter.
endif::VK_KHR_deferred_host_operations[]

.Valid Usage
****
  * [[VUID-vkCopyAccelerationStructureKHR-None-03440]]
    All sname:VkAccelerationStructureKHR objects referenced by this command
    must: be bound to host-visible memory
  * [[VUID-vkCopyAccelerationStructureKHR-rayTracingHostAccelerationStructureCommands-03441]]
    the <<feature-raytracing-hostascmds,
    sname:VkPhysicalDeviceRayTracingFeaturesKHR::pname:rayTracingHostAccelerationStructureCommands>>
    feature must: be enabled
****

include::{generated}/validity/protos/vkCopyAccelerationStructureKHR.txt[]
--

[open,refpage='vkCopyMemoryToAccelerationStructureKHR',desc='Deserialize an acceleration structure on the host',type='protos']
--
:refpage: vkCopyMemoryToAccelerationStructureKHR

include::{generated}/api/protos/vkCopyMemoryToAccelerationStructureKHR.txt[]

This command fulfills the same task as
flink:vkCmdCopyMemoryToAccelerationStructureKHR but is executed by the host.

This command can accept acceleration structures produced by either
flink:vkCmdCopyAccelerationStructureToMemoryKHR or
flink:vkCopyAccelerationStructureToMemoryKHR.

  * pname:device is the device which owns pname:pInfo->dst.
  * pname:pInfo is a pointer to a
    slink:VkCopyMemoryToAccelerationStructureInfoKHR structure defining the
    copy operation.

ifdef::VK_KHR_deferred_host_operations[]
If the slink:VkDeferredOperationInfoKHR structure is included in the
pname:pNext chain of the slink:VkCopyMemoryToAccelerationStructureInfoKHR
structure, the operation of this command is _deferred_, as defined in the
<<deferred-host-operations,Deferred Host Operations>> chapter.
endif::VK_KHR_deferred_host_operations[]

.Valid Usage
****
  * [[VUID-vkCopyMemoryToAccelerationStructureKHR-None-03442]]
    All sname:VkAccelerationStructureKHR objects referenced by this command
    must: be bound to host-visible memory
  * [[VUID-vkCopyMemoryToAccelerationStructureKHR-None-03443]]
    All sname:VkDeviceOrHostAddressConstKHR referenced by this command must:
    contain valid host pointers
  * [[VUID-vkCopyMemoryToAccelerationStructureKHR-rayTracingHostAccelerationStructureCommands-03444]]
    the <<feature-raytracing-hostascmds,
    sname:VkPhysicalDeviceRayTracingFeaturesKHR::pname:rayTracingHostAccelerationStructureCommands>>
    feature must: be enabled
****

include::{generated}/validity/protos/vkCopyMemoryToAccelerationStructureKHR.txt[]
--

[open,refpage='vkCopyAccelerationStructureToMemoryKHR',desc='Serialize an acceleration structure on the host',type='protos']
--
:refpage: vkCopyAccelerationStructureToMemoryKHR

include::{generated}/api/protos/vkCopyAccelerationStructureToMemoryKHR.txt[]

This command fulfills the same task as
flink:vkCmdCopyAccelerationStructureToMemoryKHR but executed by the host.

This command produces the same results as
flink:vkCmdCopyAccelerationStructureToMemoryKHR, but writes its result
directly to a host pointer, and is executed on the host rather than the
device.
The output may: not necessarily be bit-for-bit identical, but it can be
equally used by either flink:vkCmdCopyMemoryToAccelerationStructureKHR or
flink:vkCopyMemoryToAccelerationStructureKHR.

  * pname:device is the device which owns pname:pInfo->src.
  * pname:pInfo is a pointer to a
    slink:VkCopyAccelerationStructureToMemoryInfoKHR structure defining the
    copy operation.

ifdef::VK_KHR_deferred_host_operations[]
If the slink:VkDeferredOperationInfoKHR structure is included in the
pname:pNext chain of the slink:VkCopyAccelerationStructureToMemoryInfoKHR
structure, the operation of this command is _deferred_, as defined in the
<<deferred-host-operations>> chapter.
endif::VK_KHR_deferred_host_operations[]

.Valid Usage
****
  * [[VUID-vkCopyAccelerationStructureToMemoryKHR-None-03445]]
    All sname:VkAccelerationStructureKHR objects referenced by this command
    must: be bound to host-visible memory
  * [[VUID-vkCopyAccelerationStructureToMemoryKHR-None-03446]]
    All sname:VkDeviceOrHostAddressKHR referenced by this command must:
    contain valid host pointers
  * [[VUID-vkCopyAccelerationStructureToMemoryKHR-rayTracingHostAccelerationStructureCommands-03447]]
    the <<feature-raytracing-hostascmds,
    sname:VkPhysicalDeviceRayTracingFeaturesKHR::pname:rayTracingHostAccelerationStructureCommands>>
    feature must: be enabled
****

include::{generated}/validity/protos/vkCopyAccelerationStructureToMemoryKHR.txt[]
--

[open,refpage='vkWriteAccelerationStructuresPropertiesKHR',desc='Query acceleration structure meta-data on the host',type='protos']
--
:refpage: vkWriteAccelerationStructuresPropertiesKHR

include::{generated}/api/protos/vkWriteAccelerationStructuresPropertiesKHR.txt[]

This command fulfills the same task as
flink:vkCmdWriteAccelerationStructuresPropertiesKHR but executed by the
host.

  * pname:device is the device which owns the acceleration structures in
    pname:pAccelerationStructures.
  * pname:accelerationStructureCount is the count of acceleration structures
    for which to query the property.
  * pname:pAccelerationStructures points to an array of existing previously
    built acceleration structures.
  * pname:queryType is a elink:VkQueryType value specifying the property to
    be queried.
  * pname:dataSize is the size in bytes of the buffer pointed to by
    pname:pData.
  * pname:pData is a pointer to a user-allocated buffer where the results
    will be written.
  * pname:stride is the stride in bytes between results for individual
    queries within pname:pData.

.Valid Usage
****
  * [[VUID-vkWriteAccelerationStructuresPropertiesKHR-queryType-03448]]
    If pname:queryType is
    ename:VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR, then
    pname:stride must: be a multiple of the size of basetype:VkDeviceSize
  * [[VUID-vkWriteAccelerationStructuresPropertiesKHR-queryType-03449]]
    If pname:queryType is
    ename:VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR, then
    pname:data must: point to a basetype:VkDeviceSize
  * [[VUID-vkWriteAccelerationStructuresPropertiesKHR-queryType-03450]]
    If pname:queryType is
    ename:VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR, then
    pname:stride must: be a multiple of the size of basetype:VkDeviceSize
  * [[VUID-vkWriteAccelerationStructuresPropertiesKHR-queryType-03451]]
    If pname:queryType is
    ename:VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR, then
    pname:data must: point to a basetype:VkDeviceSize
  * [[VUID-vkWriteAccelerationStructuresPropertiesKHR-dataSize-03452]]
    pname:dataSize must: be greater than or equal to
    [eq]#pname:accelerationStructureCount*pname:stride#
  * [[VUID-vkWriteAccelerationStructuresPropertiesKHR-pAccelerationStructures-03453]]
    The acceleration structures referenced by pname:pAccelerationStructures
    must: be bound to host-visible memory
include::{chapters}/commonvalidity/write_acceleration_structure_properties_common.txt[]
  * [[VUID-vkWriteAccelerationStructuresPropertiesKHR-rayTracingHostAccelerationStructureCommands-03454]]
    the <<feature-raytracing-hostascmds,
    sname:VkPhysicalDeviceRayTracingFeaturesKHR::pname:rayTracingHostAccelerationStructureCommands>>
    feature must: be enabled
****

include::{generated}/validity/protos/vkWriteAccelerationStructuresPropertiesKHR.txt[]
--
