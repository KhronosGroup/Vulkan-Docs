// Copyright (c) 2020 The Khronos Group Inc.
//
// SPDX-License-Identifier: CC-BY-4.0

// Common Valid Usage
// Common to VkBufferImageCopy* struct
ifndef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
  * [[VUID-{refpage}-bufferOffset-00193]]
    If the calling command's sname:VkImage parameter's format is not a
    depth/stencil format, then pname:bufferOffset must: be a multiple of the
    format's texel block size
endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
  * [[VUID-{refpage}-bufferOffset-01558]]
    If the calling command's sname:VkImage parameter's format is not a
    depth/stencil format or a
    <<formats-requiring-sampler-ycbcr-conversion,multi-planar format>>, then
    pname:bufferOffset must: be a multiple of the format's texel block size
  * [[VUID-{refpage}-bufferOffset-01559]]
    If the calling command's sname:VkImage parameter's format is a
    <<formats-requiring-sampler-ycbcr-conversion,multi-planar format>>, then
    pname:bufferOffset must: be a multiple of the element size of the
    compatible format for the format and the pname:aspectMask of the
    pname:imageSubresource as defined in <<formats-compatible-planes>>
endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
  * [[VUID-{refpage}-bufferRowLength-00195]]
    pname:bufferRowLength must: be `0`, or greater than or equal to the
    pname:width member of pname:imageExtent
  * [[VUID-{refpage}-bufferImageHeight-00196]]
    pname:bufferImageHeight must: be `0`, or greater than or equal to the
    pname:height member of pname:imageExtent
  * [[VUID-{refpage}-imageOffset-00197]]
    pname:imageOffset.x and [eq]#(pname:imageExtent.width {plus}
    pname:imageOffset.x)# must: both be greater than or equal to `0` and
    less than or equal to the image subresource width
ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    where this refers to the width of the _plane_ of the image involved in
    the copy in the case of a
    <<formats-requiring-sampler-ycbcr-conversion,multi-planar format>>
endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
  * [[VUID-{refpage}-imageOffset-00198]]
    pname:imageOffset.y and [eq]#(imageExtent.height {plus}
    pname:imageOffset.y)# must: both be greater than or equal to `0` and
    less than or equal to the image subresource height
ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    where this refers to the height of the _plane_ of the image involved in
    the copy in the case of a
    <<formats-requiring-sampler-ycbcr-conversion,multi-planar format>>
endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
  * [[VUID-{refpage}-srcImage-00199]]
    If the calling command's pname:srcImage (flink:vkCmdCopyImageToBuffer)
    or pname:dstImage (flink:vkCmdCopyBufferToImage) is of type
    ename:VK_IMAGE_TYPE_1D, then pname:imageOffset.y must: be `0` and
    pname:imageExtent.height must: be `1`
  * [[VUID-{refpage}-imageOffset-00200]]
    pname:imageOffset.z and [eq]#(imageExtent.depth {plus}
    pname:imageOffset.z)# must: both be greater than or equal to `0` and
    less than or equal to the image subresource depth
  * [[VUID-{refpage}-srcImage-00201]]
    If the calling command's pname:srcImage (flink:vkCmdCopyImageToBuffer)
    or pname:dstImage (flink:vkCmdCopyBufferToImage) is of type
    ename:VK_IMAGE_TYPE_1D or ename:VK_IMAGE_TYPE_2D, then
    pname:imageOffset.z must: be `0` and pname:imageExtent.depth must: be
    `1`
// The block of VU below come in alternate versions when the extension is
// enabled.
ifndef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
  * [[VUID-{refpage}-bufferRowLength-00203]]
    If the calling command's sname:VkImage parameter is a compressed image,
    pname:bufferRowLength must: be a multiple of the compressed texel block
    width
  * [[VUID-{refpage}-bufferImageHeight-00204]]
    If the calling command's sname:VkImage parameter is a compressed image,
    pname:bufferImageHeight must: be a multiple of the compressed texel
    block height
  * [[VUID-{refpage}-imageOffset-00205]]
    If the calling command's sname:VkImage parameter is a compressed image,
    all members of pname:imageOffset must: be a multiple of the
    corresponding dimensions of the compressed texel block
  * [[VUID-{refpage}-bufferOffset-00206]]
    If the calling command's sname:VkImage parameter is a compressed image,
    pname:bufferOffset must: be a multiple of the compressed texel block
    size in bytes
  * [[VUID-{refpage}-imageExtent-00207]]
    If the calling command's sname:VkImage parameter is a compressed image,
    pname:imageExtent.width must: be a multiple of the compressed texel
    block width or [eq]#(pname:imageExtent.width {plus}
    pname:imageOffset.x)# must: equal the image subresource width
  * [[VUID-{refpage}-imageExtent-00208]]
    If the calling command's sname:VkImage parameter is a compressed image,
    pname:imageExtent.height must: be a multiple of the compressed texel
    block height or [eq]#(pname:imageExtent.height {plus}
    pname:imageOffset.y)# must: equal the image subresource height
  * [[VUID-{refpage}-imageExtent-00209]]
    If the calling command's sname:VkImage parameter is a compressed image,
    pname:imageExtent.depth must: be a multiple of the compressed texel
    block depth or [eq]#(pname:imageExtent.depth {plus}
    pname:imageOffset.z)# must: equal the image subresource depth
endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
// The nested ifdefs are there in anticipation of the hoped-for day when the
// VU extractor and validation layers can handle VU with imbedded
// conditionals. They are commented out until then.
ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
  * [[VUID-{refpage}-None-01735]]
    If the calling command's sname:VkImage parameter is a compressed image,
// ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    or a _single-plane_, "`etext:_422`" image format,
// endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    pname:bufferRowLength must: be a multiple of the compressed texel block
    width
  * [[VUID-{refpage}-None-01736]]
    If the calling command's sname:VkImage parameter is a compressed image,
// ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    or a _single-plane_, "`etext:_422`" image format,
// endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    pname:bufferImageHeight must: be a multiple of the compressed texel
    block height
  * [[VUID-{refpage}-None-01737]]
    If the calling command's sname:VkImage parameter is a compressed image,
// ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    or a _single-plane_, "`etext:_422`" image format,
// endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    all members of pname:imageOffset must: be a multiple of the
    corresponding dimensions of the compressed texel block
  * [[VUID-{refpage}-None-01738]]
    If the calling command's sname:VkImage parameter is a compressed image,
// ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    or a _single-plane_, "`etext:_422`" image format,
// endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    pname:bufferOffset must: be a multiple of the compressed texel block
    size in bytes
  * [[VUID-{refpage}-None-01739]]
    If the calling command's sname:VkImage parameter is a compressed image,
// ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    or a _single-plane_, "`etext:_422`" image format,
// endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    pname:imageExtent.width must: be a multiple of the compressed texel
    block width or [eq]#(pname:imageExtent.width {plus}
    pname:imageOffset.x)# must: equal the image subresource width
  * [[VUID-{refpage}-None-01740]]
    If the calling command's sname:VkImage parameter is a compressed image,
// ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    or a _single-plane_, "`etext:_422`" image format,
// endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    pname:imageExtent.height must: be a multiple of the compressed texel
    block height or [eq]#(pname:imageExtent.height {plus}
    pname:imageOffset.y)# must: equal the image subresource height
  * [[VUID-{refpage}-None-01741]]
    If the calling command's sname:VkImage parameter is a compressed image,
// ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    or a _single-plane_, "`etext:_422`" image format,
// endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
    pname:imageExtent.depth must: be a multiple of the compressed texel
    block depth or [eq]#(pname:imageExtent.depth {plus}
    pname:imageOffset.z)# must: equal the image subresource depth
endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
  * [[VUID-{refpage}-aspectMask-00211]]
    The pname:aspectMask member of pname:imageSubresource must: specify
    aspects present in the calling command's sname:VkImage parameter
ifdef::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
  * [[VUID-{refpage}-aspectMask-01560]]
    If the calling command's sname:VkImage parameter's format is a
    <<formats-requiring-sampler-ycbcr-conversion,multi-planar format>>, then
    the pname:aspectMask member of pname:imageSubresource must: be
    ename:VK_IMAGE_ASPECT_PLANE_0_BIT, ename:VK_IMAGE_ASPECT_PLANE_1_BIT, or
    ename:VK_IMAGE_ASPECT_PLANE_2_BIT (with
    ename:VK_IMAGE_ASPECT_PLANE_2_BIT valid only for image formats with
    three planes)
endif::VK_VERSION_1_1,VK_KHR_sampler_ycbcr_conversion[]
  * [[VUID-{refpage}-aspectMask-00212]]
    The pname:aspectMask member of pname:imageSubresource must: only have a
    single bit set
  * [[VUID-{refpage}-baseArrayLayer-00213]]
    If the calling command's sname:VkImage parameter is of elink:VkImageType
    ename:VK_IMAGE_TYPE_3D, the pname:baseArrayLayer and pname:layerCount
    members of pname:imageSubresource must: be `0` and `1`, respectively
ifndef::VK_EXT_depth_range_unrestricted[]
  * [[VUID-{refpage}-None-00214]]
    When copying to the depth aspect of an image subresource, the data in
    the source buffer must: be in the range [eq]#[0,1]#
endif::VK_EXT_depth_range_unrestricted[]
// Common Valid Usage
