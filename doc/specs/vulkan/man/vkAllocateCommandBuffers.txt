vkAllocateCommandBuffers(3)
===========================

Name
----
vkAllocateCommandBuffers - Allocate command buffers from an existing command pool

C Specification
---------------

include::../protos/vkAllocateCommandBuffers.txt[]

Parameters
----------

pname:device::
    A handle to the device that owns the pool from which the command buffers are to be allocated.

pname:pAllocateInfo::
    A pointer to a structure containing information about the command buffers to be allocated.

pname:pCommandBuffers::
    A pointer to an array of sname:VkCommandBuffer handles that will be filled with the newly allocated command buffers.

Description
-----------

fname:vkAllocateCommandBuffers allocates command buffers from an existing command pool. pname:pAllocateInfo
is a pointer to an instance of the slink:VkCommandBufferAllocateInfo structure which
describes the command buffer allocation. The definition of slink:VkCommandBufferAllocateInfo is:

include::../structs/VkCommandBufferAllocateInfo.txt[]

In pname:pAllocateInfo, pname:sType must be ename:VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO
and, unless an extension is in use, pname:pNext must be code:NULL. pname:commandPool is a handle to the command
pool from which the command buffer should be allocated, and this must be a command pool that is owned
by the device whose handle is passed in pname:device. The pname:level field indicates the level of the
command buffer (primary or secondary) and must be a member of the elink:VkCommandBufferLevel enumeration.
The number of command buffers to allocate is given by pname:commandBufferCount.

On success, pname:commandBufferCount new command buffers are returned in the array pointed to
by pname:pCommandBuffers. Command buffers allocated with fname:vkAllocateCommandBuffers must: be freed
using flink:vkFreeCommandBuffers.

include::../validity/protos/vkAllocateCommandBuffers.txt[]

See Also
--------

flink:vkCreateCommandPool, flink:vkDestroyCommandPool, flink:vkFreeCommandBuffers

include::footer.txt[]
