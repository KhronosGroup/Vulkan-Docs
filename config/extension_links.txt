// Extension links usable as {VK_KHR_whatever}
// In each section sort alphabetically, except KHR\ARB\OES and EXT first

///////////////////////////
// Base paths to the web //
///////////////////////////

:spirv: https://htmlpreview.github.io/?https://github.com/KhronosGroup/SPIRV-Registry/blob/master/extensions
:glsl: https://raw.githubusercontent.com/KhronosGroup/GLSL/master/extensions
:gl: https://www.khronos.org/registry/OpenGL/extensions
:egl: https://www.khronos.org/registry/EGL/extensions

///////////////////////
// SPIR-V extensions //
///////////////////////

// The SPIR-V extensions that are hosted at SPIRV-Registry GitHub as html

:link-SPV_KHR_16bit_storage: pass:normal[{spirv}/KHR/SPV_KHR_16bit_storage.html[`SPV_KHR_16bit_storage`]]
:link-SPV_KHR_8bit_storage: pass:normal[{spirv}/KHR/SPV_KHR_8bit_storage.html[`SPV_KHR_8bit_storage`]]
:link-SPV_KHR_device_group: pass:normal[{spirv}/KHR/SPV_KHR_device_group.html[`SPV_KHR_device_group`]]
:link-SPV_KHR_float_controls: pass:normal[{spirv}/KHR/SPV_KHR_float_controls.html[`SPV_KHR_float_controls`]]
:link-SPV_KHR_multiview: pass:normal[{spirv}/KHR/SPV_KHR_multiview.html[`SPV_KHR_multiview`]]
:link-SPV_KHR_no_integer_wrap_decoration: pass:normal[{spirv}/KHR/SPV_KHR_no_integer_wrap_decoration.html[`SPV_KHR_no_integer_wrap_decoration`]]
:link-SPV_KHR_physical_storage_buffer: pass:normal[{spirv}/KHR/SPV_KHR_physical_storage_buffer.html[`SPV_KHR_physical_storage_buffer`]]
:link-SPV_KHR_post_depth_coverage: pass:normal[{spirv}/KHR/SPV_KHR_post_depth_coverage.html[`SPV_KHR_post_depth_coverage`]]
:link-SPV_KHR_shader_atomic_counter_ops: pass:normal[{spirv}/KHR/SPV_KHR_shader_atomic_counter_ops.html[`SPV_KHR_shader_atomic_counter_ops`]]
:link-SPV_KHR_shader_ballot: pass:normal[{spirv}/KHR/SPV_KHR_shader_ballot.html[`SPV_KHR_shader_ballot`]]
:link-SPV_KHR_shader_clock: pass:normal[{spirv}/KHR/SPV_KHR_shader_clock.html[`SPV_KHR_shader_clock`]]
:link-SPV_KHR_shader_draw_parameters: pass:normal[{spirv}/KHR/SPV_KHR_shader_draw_parameters.html[`SPV_KHR_shader_draw_parameters`]]
:link-SPV_KHR_storage_buffer_storage_class: pass:normal[{spirv}/KHR/SPV_KHR_storage_buffer_storage_class.html[`SPV_KHR_storage_buffer_storage_class`]]
:link-SPV_KHR_subgroup_vote: pass:normal[{spirv}/KHR/SPV_KHR_subgroup_vote.html[`SPV_KHR_subgroup_vote`]]
:link-SPV_KHR_variable_pointers: pass:normal[{spirv}/KHR/SPV_KHR_variable_pointers.html[`SPV_KHR_variable_pointers`]]
:link-SPV_KHR_vulkan_memory_model: pass:normal[{spirv}/KHR/SPV_KHR_vulkan_memory_model.html[`SPV_KHR_vulkan_memory_model`]]
:link-SPV_EXT_demote_to_helper_invocation: pass:normal[{spirv}/EXT/SPV_EXT_demote_to_helper_invocation.html[`SPV_EXT_demote_to_helper_invocation`]]
:link-SPV_EXT_descriptor_indexing: pass:normal[{spirv}/EXT/SPV_EXT_descriptor_indexing.html[`SPV_EXT_descriptor_indexing`]]
:link-SPV_EXT_fragment_fully_covered: pass:normal[{spirv}/EXT/SPV_EXT_fragment_fully_covered.html[`SPV_EXT_fragment_fully_covered`]]
:link-SPV_EXT_fragment_invocation_density: pass:normal[{spirv}/EXT/SPV_EXT_fragment_invocation_density.html[`SPV_EXT_fragment_invocation_density`]]
:link-SPV_EXT_fragment_shader_interlock: pass:normal[{spirv}/EXT/SPV_EXT_fragment_shader_interlock.html[`SPV_EXT_fragment_shader_interlock`]]
:link-SPV_EXT_physical_storage_buffer: pass:normal[{spirv}/EXT/SPV_EXT_physical_storage_buffer.html[`SPV_EXT_physical_storage_buffer`]]
:link-SPV_EXT_shader_stencil_export: pass:normal[{spirv}/EXT/SPV_EXT_shader_stencil_export.html[`SPV_EXT_shader_stencil_export`]]
:link-SPV_EXT_shader_viewport_index_layer: pass:normal[{spirv}/EXT/SPV_EXT_shader_viewport_index_layer.html[`SPV_EXT_shader_viewport_index_layer`]]
:link-SPV_AMD_gcn_shader: pass:normal[{spirv}/AMD/SPV_AMD_gcn_shader.html[`SPV_AMD_gcn_shader`]]
:link-SPV_AMD_gpu_shader_half_float: pass:normal[{spirv}/AMD/SPV_AMD_gpu_shader_half_float.html[`SPV_AMD_gpu_shader_half_float`]]
:link-SPV_AMD_gpu_shader_half_float_fetch: pass:normal[{spirv}/AMD/SPV_AMD_gpu_shader_half_float_fetch.html[`SPV_AMD_gpu_shader_half_float_fetch`]]
:link-SPV_AMD_gpu_shader_int16: pass:normal[{spirv}/AMD/SPV_AMD_gpu_shader_int16.html[`SPV_AMD_gpu_shader_int16`]]
:link-SPV_AMD_shader_ballot: pass:normal[{spirv}/AMD/SPV_AMD_shader_ballot.html[`SPV_AMD_shader_ballot`]]
:link-SPV_AMD_shader_explicit_vertex_parameter: pass:normal[{spirv}/AMD/SPV_AMD_shader_explicit_vertex_parameter.html[`SPV_AMD_shader_explicit_vertex_parameter`]]
:link-SPV_AMD_shader_fragment_mask: pass:normal[{spirv}/AMD/SPV_AMD_shader_fragment_mask.html[`SPV_AMD_shader_fragment_mask`]]
:link-SPV_AMD_shader_image_load_store_lod: pass:normal[{spirv}/AMD/SPV_AMD_shader_image_load_store_lod.html[`SPV_AMD_shader_image_load_store_lod`]]
:link-SPV_AMD_shader_trinary_minmax: pass:normal[{spirv}/AMD/SPV_AMD_shader_trinary_minmax.html[`SPV_AMD_shader_trinary_minmax`]]
:link-SPV_AMD_texture_gather_bias_lod: pass:normal[{spirv}/AMD/SPV_AMD_texture_gather_bias_lod.html[`SPV_AMD_texture_gather_bias_lod`]]
:link-SPV_GOOGLE_decorate_string: pass:normal[{spirv}/GOOGLE/SPV_GOOGLE_decorate_string.html[`SPV_GOOGLE_decorate_string`]]
:link-SPV_GOOGLE_hlsl_functionality1: pass:normal[{spirv}/GOOGLE/SPV_GOOGLE_hlsl_functionality1.html[`SPV_GOOGLE_hlsl_functionality1`]]
:link-SPV_GOOGLE_user_type: pass:normal[{spirv}/GOOGLE/SPV_GOOGLE_user_type.html[`SPV_GOOGLE_user_type`]]
:link-SPV_INTEL_blocking_pipes: pass:normal[{spirv}/INTEL/SPV_INTEL_blocking_pipes.html[`SPV_INTEL_blocking_pipes`]]
:link-SPV_INTEL_device_side_avc_motion_estimation: pass:normal[{spirv}/INTEL/SPV_INTEL_device_side_avc_motion_estimation.html[`SPV_INTEL_device_side_avc_motion_estimation`]]
:link-SPV_INTEL_fpga_loop_controls: pass:normal[{spirv}/INTEL/SPV_INTEL_fpga_loop_controls.html[`SPV_INTEL_fpga_loop_controls`]]
:link-SPV_INTEL_fpga_memory_attributes: pass:normal[{spirv}/INTEL/SPV_INTEL_fpga_memory_attributes.html[`SPV_INTEL_fpga_memory_attributes`]]
:link-SPV_INTEL_fpga_reg: pass:normal[{spirv}/INTEL/SPV_INTEL_fpga_reg.html[`SPV_INTEL_fpga_reg`]]
:link-SPV_INTEL_media_block_io: pass:normal[{spirv}/INTEL/SPV_INTEL_media_block_io.html[`SPV_INTEL_media_block_io`]]
:link-SPV_INTEL_shader_integer_functions2: pass:normal[{spirv}/INTEL/SPV_INTEL_shader_integer_functions2.html[`SPV_INTEL_shader_integer_functions2`]]
:link-SPV_INTEL_subgroups: pass:normal[{spirv}/INTEL/SPV_INTEL_subgroups.html[`SPV_INTEL_subgroups`]]
:link-SPV_INTEL_unstructured_loop_controls: pass:normal[{spirv}/INTEL/SPV_INTEL_unstructured_loop_controls.html[`SPV_INTEL_unstructured_loop_controls`]]
:link-SPV_NV_compute_shader_derivatives: pass:normal[{spirv}/NV/SPV_NV_compute_shader_derivatives.html[`SPV_NV_compute_shader_derivatives`]]
:link-SPV_NV_cooperative_matrix: pass:normal[{spirv}/NV/SPV_NV_cooperative_matrix.html[`SPV_NV_cooperative_matrix`]]
:link-SPV_NV_fragment_shader_barycentric: pass:normal[{spirv}/NV/SPV_NV_fragment_shader_barycentric.html[`SPV_NV_fragment_shader_barycentric`]]
:link-SPV_NV_geometry_shader_passthrough: pass:normal[{spirv}/NV/SPV_NV_geometry_shader_passthrough.html[`SPV_NV_geometry_shader_passthrough`]]
:link-SPV_NV_mesh_shader: pass:normal[{spirv}/NV/SPV_NV_mesh_shader.html[`SPV_NV_mesh_shader`]]
:link-SPV_NV_ray_tracing: pass:normal[{spirv}/NV/SPV_NV_ray_tracing.html[`SPV_NV_ray_tracing`]]
:link-SPV_NV_sample_mask_override_coverage: pass:normal[{spirv}/NV/SPV_NV_sample_mask_override_coverage.html[`SPV_NV_sample_mask_override_coverage`]]
:link-SPV_NV_shader_image_footprint: pass:normal[{spirv}/NV/SPV_NV_shader_image_footprint.html[`SPV_NV_shader_image_footprint`]]
:link-SPV_NV_shader_sm_builtins: pass:normal[{spirv}/NV/SPV_NV_shader_sm_builtins.html[`SPV_NV_shader_sm_builtins`]]
:link-SPV_NV_shader_subgroup_partitioned: pass:normal[{spirv}/NV/SPV_NV_shader_subgroup_partitioned.html[`SPV_NV_shader_subgroup_partitioned`]]
:link-SPV_NV_shading_rate: pass:normal[{spirv}/NV/SPV_NV_shading_rate.html[`SPV_NV_shading_rate`]]
:link-SPV_NV_stereo_view_rendering: pass:normal[{spirv}/NV/SPV_NV_stereo_view_rendering.html[`SPV_NV_stereo_view_rendering`]]
:link-SPV_NV_viewport_array2: pass:normal[{spirv}/NV/SPV_NV_viewport_array2.html[`SPV_NV_viewport_array2`]]
:link-SPV_NVX_multiview_per_view_attributes: pass:normal[{spirv}/NVX/SPV_NVX_multiview_per_view_attributes.html[`SPV_NVX_multiview_per_view_attributes`]]

/////////////////////
// GLSL extensions //
/////////////////////

// The GL extensions that are hosted at GLSL GitHub as txt
// CAREFUL: the vendor name is lowercase
// and the file sometimes start with GLSL instead GL

:link-GL_KHR_memory_scope_semantics: pass:normal[{glsl}/khr/GL_KHR_memory_scope_semantics.txt[`GL_KHR_memory_scope_semantics`]]
:link-GL_KHR_shader_subgroup: pass:normal[{glsl}/khr/GL_KHR_shader_subgroup.txt[`GL_KHR_shader_subgroup`]]
:link-GL_KHR_vulkan_glsl: pass:normal[{glsl}/khr/GL_KHR_vulkan_glsl.txt[`GL_KHR_vulkan_glsl`]]
:link-GL_EXT_buffer_reference: pass:normal[{glsl}/ext/GLSL_EXT_buffer_reference.txt[`GL_EXT_buffer_reference`]]
:link-GL_EXT_buffer_reference2: pass:normal[{glsl}/ext/GLSL_EXT_buffer_reference2.txt[`GL_EXT_buffer_reference2`]]
:link-GL_EXT_buffer_reference_uvec2: pass:normal[{glsl}/ext/GLSL_EXT_buffer_reference_uvec2.txt[`GL_EXT_buffer_reference_uvec2`]]
:link-GL_EXT_control_flow_attributes: pass:normal[{glsl}/ext/GL_EXT_control_flow_attributes.txt[`GL_EXT_control_flow_attributes`]]
:link-GL_EXT_demote_to_helper_invocation: pass:normal[{glsl}/ext/GLSL_EXT_demote_to_helper_invocation.txt[`GL_EXT_demote_to_helper_invocation`]]
:link-GL_EXT_device_group: pass:normal[{glsl}/ext/GL_EXT_device_group.txt[`GL_EXT_device_group`]]
:link-GL_EXT_fragment_invocation_density: pass:normal[{glsl}/ext/GLSL_EXT_fragment_invocation_density.txt[`GL_EXT_fragment_invocation_density`]]
:link-GL_EXT_multiview: pass:normal[{glsl}/ext/GL_EXT_multiview.txt[`GL_EXT_multiview`]]
:link-GL_EXT_nonuniform_qualifier: pass:normal[{glsl}/ext/GL_EXT_nonuniform_qualifier.txt[`GL_EXT_nonuniform_qualifier`]]
:link-GL_EXT_samplerless_texture_functions: pass:normal[{glsl}/ext/GL_EXT_samplerless_texture_functions.txt[`GL_EXT_samplerless_texture_functions`]]
:link-GL_EXT_scalar_block_layout: pass:normal[{glsl}/ext/GL_EXT_scalar_block_layout.txt[`GL_EXT_scalar_block_layout`]]
:link-GL_EXT_shader_16bit_storage: pass:normal[{glsl}/ext/GL_EXT_shader_16bit_storage.txt[`GL_EXT_shader_16bit_storage`]]
:link-GL_EXT_shader_atomic_int64: pass:normal[{glsl}/ext/GL_EXT_shader_atomic_int64.txt[`GL_EXT_shader_atomic_int64`]]
:link-GL_EXT_shader_explicit_arithmetic_types: pass:normal[{glsl}/ext/GL_EXT_shader_explicit_arithmetic_types.txt[`GL_EXT_shader_explicit_arithmetic_types`]]
:link-GL_EXT_shader_realtime_clock: pass:normal[{glsl}/ext/GL_EXT_shader_realtime_clock.txt[`GL_EXT_shader_realtime_clock`]]
:link-GL_EXT_shader_subgroup_extended_types: pass:normal[{glsl}/ext/GLSL_EXT_shader_subgroup_extended_types.txt[`GL_EXT_shader_subgroup_extended_types`]]
:link-GL_EXT_subgroupuniform_qualifier: pass:normal[{glsl}/ext/GL_EXT_subgroupuniform_qualifier.txt[`GL_EXT_subgroupuniform_qualifier`]]
:link-GL_AMD_shader_fragment_mask: pass:normal[{glsl}/amd/GL_AMD_shader_fragment_mask.txt[`GL_AMD_shader_fragment_mask`]]
// TODO: link dead https://github.com/KhronosGroup/Vulkan-Docs/issues/1065
:link-GL_INTEL_shader_integer_functions2: pass:normal[{glsl}/ext/GL_INTEL_shader_integer_functions2.txt[`GL_INTEL_shader_integer_functions2`]]
:link-GL_NV_compute_shader_derivatives: pass:normal[{glsl}/nv/GLSL_NV_compute_shader_derivatives.txt[`GL_NV_compute_shader_derivatives`]]
:link-GL_NV_cooperative_matrix: pass:normal[{glsl}/nv/GLSL_NV_cooperative_matrix.txt[`GL_NV_cooperative_matrix`]]
:link-GL_NV_fragment_shader_barycentric: pass:normal[{glsl}/nv/GLSL_NV_fragment_shader_barycentric.txt[`GL_NV_fragment_shader_barycentric`]]
:link-GL_NV_mesh_shader: pass:normal[{glsl}/nv/GLSL_NV_mesh_shader.txt[`GL_NV_mesh_shader`]]
:link-GL_NV_ray_tracing: pass:normal[{glsl}/nv/GLSL_NV_ray_tracing.txt[`GL_NV_ray_tracing`]]
:link-GL_NV_shader_sm_builtins: pass:normal[{glsl}/nv/GLSL_NV_shader_sm_builtins.txt[`GL_NV_shader_sm_builtins`]]
:link-GL_NV_shader_texture_footprint: pass:normal[{glsl}/nv/GLSL_NV_shader_texture_footprint.txt[`GL_NV_shader_texture_footprint`]]
:link-GL_NV_shader_subgroup_partitioned: pass:normal[{glsl}/nv/GL_NV_shader_subgroup_partitioned.txt[`GL_NV_shader_subgroup_partitioned`]]
:link-GL_NV_shading_rate_image: pass:normal[{glsl}/nv/GLSL_NV_shading_rate_image.txt[`GL_NV_shading_rate_image`]]
:link-GL_NVX_multiview_per_view_attributes: pass:normal[{glsl}/nvx/GL_NVX_multiview_per_view_attributes.txt[`GL_NVX_multiview_per_view_attributes`]]

///////////////////
// GL extensions //
///////////////////

// The GL extensions that are hosted at Khronos OpenGL registry page as txt
// Does not need to be complete; Vulkan will not reference most extensions.
// CAREFUL: The paths do not include the initial GL_

:link-GL_ARB_fragment_shader_interlock: pass:normal[{gl}/ARB/ARB_fragment_shader_interlock.txt[`GL_ARB_fragment_shader_interlock`]]
:link-GL_ARB_gpu_shader_int64: pass:normal[{gl}/ARB/ARB_gpu_shader_int64.txt[`GL_ARB_gpu_shader_int64`]]
:link-GL_ARB_post_depth_coverage: pass:normal[{gl}/ARB/ARB_post_depth_coverage.txt[`GL_ARB_post_depth_coverage`]]
:link-GL_ARB_shader_ballot: pass:normal[{gl}/ARB/ARB_shader_ballot.txt[`GL_ARB_shader_ballot`]]
:link-GL_ARB_shader_clock: pass:normal[{gl}/ARB/ARB_shader_clock.txt[`GL_ARB_shader_clock`]]
:link-GL_ARB_shader_draw_parameters: pass:normal[{gl}/ARB/ARB_shader_draw_parameters.txt[`GL_ARB_shader_draw_parameters`]]
:link-GL_ARB_shader_group_vote: pass:normal[{gl}/ARB/ARB_shader_group_vote.txt[`GL_ARB_shader_group_vote`]]
:link-GL_ARB_shader_viewport_layer_array: pass:normal[{gl}/ARB/ARB_shader_viewport_layer_array.txt[`GL_ARB_shader_viewport_layer_array`]]
:link-GL_OES_EGL_image_external: pass:normal[{gl}/OES/OES_EGL_image_external.txt[`GL_OES_EGL_image_external`]]
:link-GL_EXT_post_depth_coverage: pass:normal[{gl}/EXT/EXT_post_depth_coverage.txt[`GL_EXT_post_depth_coverage`]]
:link-GL_AMD_shader_image_load_store_lod: pass:normal[{gl}/AMD/AMD_shader_image_load_store_lod.txt[`GL_AMD_shader_image_load_store_lod`]]
:link-GL_AMD_vertex_shader_layer: pass:normal[{gl}/AMD/AMD_vertex_shader_layer.txt[`GL_AMD_vertex_shader_layer`]]
:link-GL_AMD_vertex_shader_viewport_index: pass:normal[{gl}/AMD/AMD_vertex_shader_viewport_index.txt[`GL_AMD_vertex_shader_viewport_index`]]
:link-GL_OVR_multiview: pass:normal[{gl}/OVR/OVR_multiview.txt[`GL_OVR_multiview`]]
:link-GL_NV_geometry_shader_passthrough: pass:normal[{gl}/NV/NV_geometry_shader_passthrough.txt[`GL_NV_geometry_shader_passthrough`]]
:link-GL_NV_path_rendering: pass:normal[{gl}/NV/NV_path_rendering.txt[`GL_NV_path_rendering`]]
:link-GL_NV_sample_mask_override_coverage: pass:normal[{gl}/NV/NV_sample_mask_override_coverage.txt[`GL_NV_sample_mask_override_coverage`]]
:link-GL_NV_viewport_array2: pass:normal[{gl}/NV/NV_viewport_array2.txt[`GL_NV_viewport_array2`]]

////////////////////
// EGL extensions //
////////////////////

// The EGL extensions that are hosted at Khronos EGL registry page as txt
// Does not need to be complete; Vulkan will not reference most extensions.

:link-EGL_KHR_swap_buffers_with_damage: pass:normal[{egl}/KHR/EGL_KHR_swap_buffers_with_damage.txt[`EGL_KHR_swap_buffers_with_damage`]]
:link-EGL_EXT_image_dma_buf_import: pass:normal[{egl}/EXT/EGL_EXT_image_dma_buf_import.txt[`EGL_EXT_image_dma_buf_import`]]
:link-EGL_EXT_image_dma_buf_import_modifiers: pass:normal[{egl}/EXT/EGL_EXT_image_dma_buf_import_modifiers.txt[`EGL_EXT_image_dma_buf_import_modifiers`]]
:link-EGL_MESA_image_dma_buf_export: pass:normal[{egl}/MESA/EGL_MESA_image_dma_buf_export.txt[`EGL_MESA_image_dma_buf_export`]]
