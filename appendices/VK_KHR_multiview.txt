// Copyright (c) 2016-2018 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

include::meta/VK_KHR_multiview.txt[]

*Last Modified Date*::
    2016-10-28
*IP Status*::
    No known IP claims.
*Interactions and External Dependencies*::
  - Promoted to Vulkan 1.1 Core
*Contributors*::
  - Jeff Bolz, NVIDIA

This extension has the same goal as the OpenGL ES +GL_OVR_multiview+
extension - it enables rendering to multiple "`views`" by recording a single
set of commands to be executed with slightly different behavior for each
view.
It includes a concise way to declare a render pass with multiple views, and
gives implementations freedom to render the views in the most efficient way
possible.


=== New Object Types

None.

=== New Enum Constants

  * Extending elink:VkStructureType:
  ** ename:VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR
  ** ename:VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR
  ** ename:VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR

  * Extending elink:VkDependencyFlagBits
  ** ename:VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR

=== New Enums

None.

=== New Structures

  * slink:VkPhysicalDeviceMultiviewFeaturesKHR
  * slink:VkPhysicalDeviceMultiviewPropertiesKHR
  * slink:VkRenderPassMultiviewCreateInfoKHR

=== New Functions

None.

=== New Built-In Variables

  * <<interfaces-builtin-variables-viewindex,code:ViewIndex>>

=== New SPIR-V Capabilities

  * <<spirvenv-capabilities-multiview,code:MultiView>>

=== Promotion to Vulkan 1.1

All functionality in this extension is included in core Vulkan 1.1, with the
KHR suffix omitted.
The original type, enum and command names are still available as aliases of
the core functionality.

=== Issues

None.

=== Examples

None.

=== Version History

 * Revision 1, 2016-10-28 (Jeff Bolz)
   - Internal revisions
