// Copyright (c) 2014-2018 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

include::meta/VK_KHR_mir_surface.txt[]

*Last Modified Date*::
    2015-11-28
*IP Status*::
    No known IP claims.
*Contributors*::
  - Patrick Doane, Blizzard
  - Jason Ekstrand, Intel
  - Ian Elliott, LunarG
  - Courtney Goeltzenleuchter, LunarG
  - Jesse Hall, Google
  - James Jones, NVIDIA
  - Antoine Labour, Google
  - Jon Leech, Khronos
  - David Mao, AMD
  - Norbert Nopper, Freescale
  - Alon Or-bach, Samsung
  - Daniel Rakos, AMD
  - Graham Sellers, AMD
  - Ray Smith, ARM
  - Jeff Vigil, Qualcomm
  - Chia-I Wu, LunarG


The `VK_KHR_mir_surface` extension is an instance extension.
It provides a mechanism to create a slink:VkSurfaceKHR object (defined by
the `<<VK_KHR_surface>>` extension) that refers to a Mir surface, as well as
a query to determine support for rendering to the windows desktop.

=== New Object Types

None

=== New Enum Constants

  * Extending elink:VkStructureType:
  ** ename:VK_STRUCTURE_TYPE_MIR_SURFACE_CREATE_INFO_KHR

=== New Enums

None

=== New Structures

  * slink:VkMirSurfaceCreateInfoKHR

=== New Functions

  * flink:vkCreateMirSurfaceKHR
  * flink:vkGetPhysicalDeviceMirPresentationSupportKHR

=== Issues

1) Does Mir need a way to query for compatibility between a particular
physical device (and queue family?) and a specific Mir connection, screen,
window, etc.?

*RESOLVED*: Yes, flink:vkGetPhysicalDeviceMirPresentationSupportKHR was
added to address this.

=== Version History

 * Revision 1, 2015-09-23 (Jesse Hall)
   - Initial draft, based on the previous contents of VK_EXT_KHR_swapchain
     (later renamed VK_EXT_KHR_surface).

 * Revision 2, 2015-10-02 (James Jones)
   - Added vkGetPhysicalDeviceMirPresentationSupportKHR to resolve issue #1.

 * Revision 3, 2015-10-26 (Ian Elliott)
   - Renamed from VK_EXT_KHR_mir_surface to VK_KHR_mir_surface.

 * Revision 4, 2015-11-28 (Daniel Rakos)
   - Updated the surface create function to take a pCreateInfo structure.
