include::meta/VK_EXT_buffer_device_address.txt[]

*Last Modified Date*::
    2019-01-06
*IP Status*::
    No known IP claims.
*Contributors*::
  - Jeff Bolz, NVIDIA
  - Neil Henning, AMD
  - Tobias Hector, AMD
  - Jason Ekstrand, Intel
  - Baldur Karlsson, Valve

This extension allows the application to query a 64-bit buffer device
address value for a buffer, which can be used to access the buffer memory
via the code:PhysicalStorageBufferEXT storage class in the
https://github.com/KhronosGroup/GLSL/blob/master/extensions/ext/GLSL_EXT_buffer_reference.txt[`GL_EXT_buffer_reference`]
GLSL extension and
http://htmlpreview.github.io/?https://github.com/KhronosGroup/SPIRV-Registry/blob/master/extensions/EXT/SPV_EXT_physical_storage_buffer.html[`SPV_EXT_physical_storage_buffer`]
SPIR-V extension.

It also allows buffer device addresses to be provided by a trace replay
tool, so that it matches the address used when the trace was captured.

=== New Object Types

None

=== New Enum Constants

  * Extending elink:VkStructureType:
  ** ename:VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT
  ** ename:VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT
  ** ename:VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT

  * Extending elink:VkBufferUsageFlagBits:
  ** ename:VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT

  * Extending elink:VkBufferCreateFlagBits:
  ** ename:VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT

  * Extending elink:VkResult:
  ** ename:VK_ERROR_INVALID_DEVICE_ADDRESS_EXT

=== New Enums

None

=== New Structures

  * slink:VkPhysicalDeviceBufferAddressFeaturesEXT
  * slink:VkBufferDeviceAddressInfoEXT
  * slink:VkBufferDeviceAddressCreateInfoEXT

=== New Functions

  * flink:vkGetBufferDeviceAddressEXT

=== New Built-In Variables

None

=== New SPIR-V Capabilities

  * <<spirvenv-capabilities-table-physicalstoragebufferaddresses,code:PhysicalStorageBufferAddressesEXT>>

=== Issues

None

=== Version History

 * Revision 1, 2018-11-01 (Jeff Bolz)
   - Internal revisions
